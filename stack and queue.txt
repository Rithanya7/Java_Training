Stack

package practice;

class stackarr{
	int a[] = new int[10];
	int top = -1;
	public void push(int data) {
		if(top == a.length-1) {
			System.out.println("stack is full");
		}
		else {
			top++;
			a[top] = data;
		}
	}
	public void pop() {
		if(top == -1) {
			System.out.println("stack is empty");
		}
		else {
			top--;
		}
	}
	public void peek() {
		if(top == -1) {
			System.out.println("statck is empty");
		}
		else {
			System.out.println("top of the element:"+a[top]);
		}
	}
	public void display() {
		for(int i=top;i>=0;i--) {
			System.out.println("display the elements"+a[i]);
		}
	}
}

public class stack {

	public static void main(String[] args) {
		stackarr s = new stackarr();
		s.push(10);
		s.push(20);
		s.push(30);
		s.push(40);
		s.push(50);
		s.push(60);
		s.push(70);
		s.push(80);
		s.push(90);
		s.push(100);
		s.pop();
		s.peek();
		s.display();
	}

}
 -----------------------------------------------------------------------------
Queue

package practice;
class arr{
	int a[] = new int[10];
	int front = -1;
	int rear = -1;
	public void enque(int data) {
		if(rear == a.length-1) {
			System.out.println("Queue is full");
		}
		else {
			if(front == -1) {
				front = 0;
			}
			rear ++;
			a[rear] = data; 
		}
	}
	public void dequeue() {
		if(front == -1 || front >rear) {
			System.out.println("Queue is empty");
		}
		else {
			System.out.println("Removed Element:" +a[front]);
			front++;
		}
	}
	public void peek() {
		if(front == -1 || front>rear) {
			System.out.println("Queue empty");
		}
		else {
			System.out.println("Element at front: " +a[front]);
		}
	}
	public void display() {
		if(front == -1 || front>rear) {
			System.out.println("Queue empty");
		}
		else {
			System.out.println("Display Elements");
			for(int i = front;i<=rear;i++) {
				System.out.println(a[i]);
			}
		}
	}
}
public class queue {
	public static void main(String[] args) {
		arr q = new arr();
		q.enque(100);
		q.enque(200);
		q.enque(300);
		q.enque(400);
		q.enque(500);
		q.dequeue();
		q.peek();
		q.display();
	}
}
